# -*- coding: utf-8 -*-
"""Pelymskaya_итоговое_из_методички.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FptwAruP5J-2DEsJbCOyZ2MlIup3qzyK
"""

import csv
import json
from datetime import datetime

# Чтение данных из CSV файла
def read_csv(data):
    employees = []
    with open('data.csv', newline='') as file:
        reader = csv.DictReader(file, delimiter=',')
        for row in reader:
            row['Оклад'] = int(row['Оклад'])
            row['Дата найма'] = datetime.strptime(row['Дата найма'], '%d.%m.%Y')
            employees.append(row)
    return employees

# Расчет премии ко дню программиста
def calculate_programmer_bonus(employees):
    for employee in employees:
        if 'программист' in employee['Должность'].lower():
            employee['Премия'] = employee.get('Премия', 0) + employee['Оклад'] * 0.03
    return employees

# Расчет премии к 8 марта и 23 февраля
def calculate_gender_bonus(employees):
    for employee in employees:
        if employee['ФИО'].split()[1].endswith('а'):
            employee['Премия'] = employee.get('Премия', 0) + 2000
        else:
            employee['Премия'] = employee.get('Премия', 0) + 2000
    return employees

# Индексация зарплат
def index_salaries(employees):
    current_date = datetime.now()
    for employee in employees:
        years_worked = (current_date - employee['Дата найма']).days / 365
        if years_worked > 10:
            employee['Оклад'] *= 1.07
        else:
            employee['Оклад'] *= 1.05
    return employees

# Составление графика отпусков
def vacation_schedule(employees):
    vacation_list = []
    current_date = datetime.now()
    for employee in employees:
        if (current_date - employee['Дата найма']).days > 180:
            vacation_list.append(employee)
    return vacation_list

# Запить в csv
def write_csv(data, employees):
    with open('data.csv', 'w') as file:
        fields = ['ФИО', 'Должность', 'Дата найма', 'Оклад']
        output_empl = csv.DictWriter(file, fieldnames=fields)
        output_empl.writeheader()
        for item in employees:
            output_empl.writerow(item)

# Запить в JSON
def write_json(data, employees):
    with open('data.json', 'w') as file_json:
        json.dump(employees, file_json)

def print_employees(employees):
    for employee in employees:
        print(f"ФИО: {employee['ФИО']}, Должность: {employee['Должность']}, Дата найма: {employee['Дата найма'].strftime('%d.%m.%Y')}, Оклад: {employee['Оклад']}, Премия: {employee.get('Премия', 0)}")

# Пример использования функции
data = 'data.csv'
employees = read_csv(data)
employees = calculate_programmer_bonus(employees)
employees = calculate_gender_bonus(employees)
employees = index_salaries(employees)

# Вывод списка сотрудников
print_employees(employees)